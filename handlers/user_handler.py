from telegram import Update, KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ContextTypes
from utils.user_data import UserDataManager
from utils.action_logger import ActionLogger

user_manager = UserDataManager()
action_logger = ActionLogger()

def get_user_data(user) -> dict:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è"""
    return {
        'id': user.id,
        'username': user.username,
        'first_name': user.first_name,
        'last_name': user.last_name,
        'language_code': user.language_code
    }

async def request_phone_number(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ó–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_data = get_user_data(update.effective_user)
    action_logger.log_action(
        user_data=user_data,
        action="request_phone",
        action_type="button_click"
    )
    
    keyboard = [[KeyboardButton("üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)
    
    await update.message.reply_text(
        "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞:",
        reply_markup=reply_markup
    )

async def handle_contact(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞"""
    contact = update.message.contact
    user_id = update.effective_user.id
    user_data = get_user_data(update.effective_user)
    
    if contact.user_id == user_id:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ç–∞–∫—Ç –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        user_manager.update_phone_number(user_id, contact.phone_number)
        action_logger.log_action(
            user_data=user_data,
            action="phone_shared",
            action_type="user_data",
            action_data=f"phone: {contact.phone_number}",
            status="success"
        )
        await update.message.reply_text(
            "–°–ø–∞—Å–∏–±–æ! –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω.",
            reply_markup=ReplyKeyboardRemove()
        )
    else:
        action_logger.log_action(
            user_data=user_data,
            action="phone_shared",
            action_type="user_data",
            action_data="invalid_phone_owner",
            status="error"
        )
        await update.message.reply_text(
            "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º—ã –º–æ–∂–µ–º –ø—Ä–∏–Ω—è—Ç—å —Ç–æ–ª—å–∫–æ –≤–∞—à —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.",
            reply_markup=ReplyKeyboardRemove()
        )

def log_user_activity(update: Update, action: str):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_data = get_user_data(update.effective_user)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user_manager.update_user(user_data, action)
    
    # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
    action_type = "command" if action.startswith("/") else "button_click"
    action_logger.log_action(
        user_data=user_data,
        action=action,
        action_type=action_type
    ) 